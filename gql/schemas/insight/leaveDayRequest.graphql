type LeaveDayRequest {
  id: ID
  userId: ID
  approverId: ID
  User: User
  Approver: User
  from: Time
  to: Time
  timeOff: Float
  requestType: String
  requestTypeHumanize: String
  requestState: String
  requestStateHumanize: String
  reason: String
  createdAt: Time
  updatedAt: Time
  lockVersion: Int!
}

type RequestReport {
  userId: ID
  user: User
  approvedTime: Float
  peddingTime: Float
  rejectedTime: Float
}

type RequestReportCollection {
  collection: [RequestReport]
}

type LeaveDayRequestCollection {
  collection: [LeaveDayRequest!]
  metadata: Metadata!
}

type LeaveDayRequestModification {
  leaveDayRequest: LeaveDayRequest!
}

input LeaveDayRequestsQuery {
  requestTypeEq: String
  requestStateEq: String
  userIdEq: Int
}

input LeaveDayRequestInput {
  from: Time!
  to: Time!
  timeOff: Float!
  requestType: String!
  mentions: [String]
  reason: String
  lockVersion: Int
}

input RequestReportInput {
  requestTypeIn: [String]
  createdAtBetween: [String]
  userIdEq: Int
}
