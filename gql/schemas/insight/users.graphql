type SignIn {
  token: String
}

type User {
  id: ID
  email: String
  fullName: String
  name: String
  about: String
  avatarUrl: String
  createdAt: Time
  companyLevelId: ID
  state: String!
  address: String
  birthday: String
  gender: String
  phone: String
  timingActiveAt: Time
  timingDeactiveAt: Time
  slackId: String
  projectAssignees: [ProjectAssigneeForSelfProfile]
}

type SelfGeneralInfo {
  id: ID
  email: String
  name: String
  fullName: String
  issuesCount: Int
  projectsCount: Int
  avatarUrl: String
  thisMonthWorkingHours: ThisMonthWorkingHours
}

type ThisMonthWorkingHours {
  hours: Float
  percentCompareToLastMonth: Float
  upFromLastMonth: Boolean
  timeGraphOnProjects: TimeGraphOnProjects
}

type TimeGraphOnProjects {
  labels: [String!]
  series: [Float!]
}

type UsersAllInfo {
  id: ID
  name: String
}

type UserCollection {
  collection: [User!]
  metadata: Metadata
}

input UsersQuery {
  nameCont: String
  fullNameCont: String
  emailCont: String
  slackIdCont: String
  stateEq: String
}

input SelfUpdateProfileInput {
  about: String
  avatarKey: String
  slackId: String
  address: String
  birthday: String
  gender: String
  phone: String
  fullName: String
}

type SelfUpdateProfileRes {
  user: SelfUpdateProfile
}

type UserType {
  user: User
}

type SelfUpdateProfile {
  id: ID
  email: String
  fullName: String
  name: String
  about: String
  avatarUrl: String
  createdAt: Time
  companyLevelId: ID
  address: String
  birthday: String
  gender: String
  phone: String
  timingActiveAt: Time
  timingDeactiveAt: Time
  slackId: String
  projectAssignees: [ProjectAssigneeForSelfProfile]
}

input SelfUpdatePassword {
  currentPassword: String!
  password: String!
  passwordConfirmation: String!
}

type UserActiveState {
  state: String!
  timingActiveAt: Time
  timingDeactiveAt: Time
}

type UserBasicInfo {
  id: ID
  name: String
  avatarUrl: String
}

type SelfThisWeekIssuesState {
  labels: [String!]!
  series: SelfThisWeekIssuesStateSeriesItem!
}

type SelfThisWeekIssuesStateSeriesItem {
  done: [Int!]!
  notDone: [Int!]!
}

type SelfProfile {
  id: ID
  email: String
  fullName: String
  name: String
  about: String
  avatarUrl: String
  createdAt: Time
  companyLevelId: ID
  address: String
  birthday: String
  gender: String
  phone: String
  timingActiveAt: Time
  timingDeactiveAt: Time
  slackId: String
  projectAssignees: [ProjectAssigneeForSelfProfile]
}

input UserUpdateInput {
  fullName: String
  email: String
  phone: String
  address: String
  birthday: String
  gender: String
  slackId: String
  state: String
  companyLevelId: Int
  password: String
  about: String
  avatarKey: String
  lockVersion: Int
}
