schema {
  query: Query
  mutation: Mutation
}

type Query {
  SelfGeneralInfo(): SelfGeneralInfo!
  SelfRecentTasks(): [SelfRecentTask]!
  SelfAttendances(input: PagyInput, query: SelfAttendancesQuery): SelfAttendanceCollection!
  SelfThisWeekIssuesState(): SelfThisWeekIssuesState!
  SelfProfile(): SelfProfile!
  SelfPermission(): [Permission]!
  SelfProjectExperiences(input: PagyInput, query: ProjectExperiencesQuery): SelfProjectExperiencesCollection!

  UserGroups(input: PagyInput, query: UserGroupsQuery): UserGroupCollection!
  UserGroup(id: ID!): UserGroup!

  User(id: ID!): User!
  Users(input: PagyInput, query: UsersQuery): UserCollection!
  UsersAll(): [UsersAllInfo]

  Projects(input: PagyInput, query: ProjectsQuery): ProjectCollection!
  Project(id: ID!): Project!

  ProjectIssues(id: ID!, input: PagyInput, query: ProjectIssuesQuery): IssueCollection!

  ProjectSprint(id: ID!): ProjectSprint!
  ProjectSprints(id: ID!): [ProjectSprint]

  IssueStatus(id: ID!): IssueStatus
  IssueStatuses(input: PagyInput, query: IssueStatusesQuery): IssueStatusCollection!
  IssueStatusesAll(): [IssueStatus]

  DevelopmentRoles(): [DevelopmentRole]

  WorkingTimelog(id: ID!): WorkingTimelog
  WorkingTimelogByAttributes(projectId: ID, issueId: ID, loggedAt: String): WorkingTimelogByAttribute
  WorkingTimelogs(input: PagyInput, query: WorkingTimelogsQuery): WorkingTimelogCollection

  DeviceType(id: ID!): DeviceType!
  DeviceTypes(input: PagyInput): DeviceTypeCollection!

  Clients(input: PagyInput, query: ClientsQuery): ClientCollection!
  Client(id: ID!): Client!

  LeaveDayRequests(input: PagyInput, query: LeaveDayRequestsQuery): LeaveDayRequestCollection!
  LeaveDayRequest(id: ID!): LeaveDayRequest!

  AnalysesTotalSummarize(): AnalysesTotalSummarize!

  Attendances(input: PagyInput, query: AttendancesQuery): AttendancesCollection!
  Attendance(id: ID!): Attendance!

  AnalysesProjectsIssueStatus(): AnalysesProjectsIssueStatus!

  Devices(input: PagyInput, query: DevicesQuery): DeviceCollection
  Device(id: ID!): Device!

  SelectOptions(input: SelectOptionsInput!): SelectOptions

  ProjectExperience(id: ID!): ProjectExperience!
}

type Mutation {
  SignIn(email: String!, password: String!): SignIn!

  SelfUpdateProfile(input: SelfUpdateProfileInput!): SelfUpdateProfileRes!
  SelfUpdatePassword(input: SelfUpdatePassword!): String
  SelfAttend(): SelfAttendance!
  SelfProjectExperienceCreate(input: ProjectExperienceInput!): ProjectExperienceModification!
  SelfProjectExperienceUpdate(id: ID!, input: ProjectExperienceInput!): ProjectExperienceModification!
  SelfProjectExperienceDestroy(id: ID!): String

  UserCreate(input: AdminUserInput!): String
  UserToggleActive(id: ID!): UserActiveState
  UserUpdate(id: ID!, input: AdminUserInput!): UserType

  ProjectSprintCreate(input: ProjectSprintFormInput!): ProjectSprintModification!
  ProjectSprintUpdate(id: ID!, input: ProjectSprintFormInput!): ProjectSprintModification!
  ProjectSprintDestroy (id: ID!): String

  ProjectCreate(input: ProjectCreateInput!): ProjectModification!
  ProjectUpdate(id: ID!, input: ProjectUpdateInput!): ProjectModification!
  ProjectDestroy(id: ID!): String

  ProjectUpdateProjectIssueStatusOrder(id: ID!, input: [Int!]!): String
  ProjectDeleteProjectIssueStatus(projectId: ID!, id: ID!): String
  ProjectCreateProjectIssueStatus(projectId: ID!, id: ID!): String

  ProjectUploadImages(id: ID!, input: ProjectUploadImagesInput!): ProjectWithImages!

  ProjectCreateProjectAssignee(id: ID!, input: ProjectModifyProjectAssigneeInput!): ProjectAssigneeModification!
  ProjectUpdateProjectAssignee(projectId: ID!, id: ID!, input: ProjectModifyProjectAssigneeInput!): ProjectAssigneeModification!
  ProjectDeleteProjectAssignee(projectId: ID!, id: ID!): String

  ProjectCreateIssue(id: ID!, input: ProjectModifyIssueInput!): ProjectIssueModification!
  ProjectUpdateIssue(projectId: ID!, id: ID!, input: ProjectModifyIssueInput!): ProjectIssueModification!

  LeaveDayRequestCreate(input: LeaveDayRequestInput!): LeaveDayRequestModification!
  LeaveDayRequestUpdate(id: ID!, input: LeaveDayRequestInput!): LeaveDayRequestModification!
  LeaveDayRequestDelete(id: ID!): String
  LeaveDayRequestStateChange(id: ID!, requestState: String!): String

  DeviceTypeCreate(input: DeviceTypeInput!): DeviceTypeModification!
  DeviceTypeUpdate(id: ID!, input: DeviceTypeInput!): DeviceTypeModification!
  DeviceTypeDestroy(id: ID!): String

  IssueStatusCreate(input: IssueStatusCreateInput!): IssueStatusModification!
  IssueStatusUpdate(id: ID!, input: IssueStatusUpdateInput!): IssueStatusModification!

  ClientCreate(input: ClientCreateInput!): ClientModification!
  ClientUpdate(id: ID!, input: ClientUpdateInput!): ClientModification!
  ClientDelete(id: ID!): String

  SelfWorkingTimelogCreateOrUpdate(input: WorkingTimelogInput, issueId: Int): WorkingTimelogModification

  AttendanceCreate(input: AttendanceInput!): AttendanceModification!
  AttendanceUpdate(id: ID!, input: AttendanceInput!): AttendanceModification!
  AttendanceDelete(id: ID!): String

  DeviceCreate(input: DeviceInput!): DeviceModification!
}

scalar Time
